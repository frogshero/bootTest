<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.bootTest.app.db.dao.ProcessLogMapper" >
  <resultMap id="BaseResultMap" type="com.example.bootTest.app.db.entity.ProcessLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="operation" property="operation" jdbcType="VARCHAR" />
    <result column="detail" property="detail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, module, operation, detail, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from process_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from process_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.bootTest.app.db.entity.ProcessLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into process_log (module, operation, detail, 
      create_time, update_time)
    values (#{module,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.bootTest.app.db.entity.ProcessLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into process_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="module != null" >
        module,
      </if>
      <if test="operation != null" >
        operation,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bootTest.app.db.entity.ProcessLog" >
    update process_log
    <set >
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="operation != null" >
        operation = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bootTest.app.db.entity.ProcessLog" >
    update process_log
    set module = #{module,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>